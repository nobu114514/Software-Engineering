{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"login-card card\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"卖家登录\", -1 /* CACHED */)), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"用户名\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"密码\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn\"\n  }, \"登录\", -1 /* CACHED */))], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","error","_hoisted_3","_toDisplayString","onSubmit","_cache","_withModifiers","args","$options","login","_hoisted_4","for","type","id","username","$event","required","_hoisted_5","password"],"sources":["D:\\game\\Trae\\litemall\\simple-shop-frontend\\frontend\\src\\views\\SellerLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card card\">\r\n      <h2>卖家登录</h2>\r\n      \r\n      <div v-if=\"error\" class=\"alert alert-danger\">\r\n        {{ error }}\r\n      </div>\r\n      \r\n      <form @submit.prevent=\"login\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">用户名</label>\r\n          <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">密码</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn\">登录</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SellerLogin',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      error: ''\r\n    }\r\n  },\r\n  created() {\r\n    // 如果已登录为卖家，跳转到后台\r\n    if (localStorage.getItem('sellerLoggedIn')) {\r\n      this.$router.push('/seller/dashboard')\r\n    }\r\n    // 如果已登录为用户，提示并跳转到首页\r\n    if (localStorage.getItem('customerLoggedIn')) {\r\n      this.error = '请先退出用户登录'\r\n      setTimeout(() => {\r\n        this.$router.push('/')\r\n      }, 2000)\r\n    }\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await this.$axios.post('/seller/login', null, {\r\n          params: {\r\n            username: this.username,\r\n            password: this.password\r\n          }\r\n        })\r\n        \r\n        if (response.data) {\r\n          localStorage.setItem('sellerLoggedIn', 'true')\r\n          this.$router.push('/seller/dashboard')\r\n        } else {\r\n          this.error = '用户名或密码错误'\r\n        }\r\n      } catch (err) {\r\n        this.error = '登录失败，请重试'\r\n        console.error(err)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 50vh;\r\n}\r\n\r\n.login-card {\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAiB;;;EAGRA,KAAK,EAAC;;;EAKjBA,KAAK,EAAC;AAAY;;EAIlBA,KAAK,EAAC;AAAY;;uBAb7BC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,mBAAA,CAkBM,OAlBNC,UAkBM,G,0BAjBJD,mBAAA,CAAa,YAAT,MAAI,qBAEGE,KAAA,CAAAC,KAAK,I,cAAhBL,mBAAA,CAEM,OAFNM,UAEM,EAAAC,gBAAA,CADDH,KAAA,CAAAC,KAAK,oB,mCAGVH,mBAAA,CAUO;IAVAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;MAC1BT,mBAAA,CAGM,OAHNY,UAGM,G,0BAFJZ,mBAAA,CAAiC;IAA1Ba,GAAG,EAAC;EAAU,GAAC,KAAG,qB,gBACzBb,mBAAA,CAA6D;IAAtDc,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,UAAU;+DAAUb,KAAA,CAAAc,QAAQ,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAVhB,KAAA,CAAAc,QAAQ,E,KAEpDhB,mBAAA,CAGM,OAHNmB,UAGM,G,0BAFJnB,mBAAA,CAAgC;IAAzBa,GAAG,EAAC;EAAU,GAAC,IAAE,qB,gBACxBb,mBAAA,CAAiE;IAA1Dc,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;+DAAUb,KAAA,CAAAkB,QAAQ,GAAAH,MAAA;IAAEC,QAAQ,EAAR;iDAAVhB,KAAA,CAAAkB,QAAQ,E,+BAExDpB,mBAAA,CAA6C;IAArCc,IAAI,EAAC,QAAQ;IAACjB,KAAK,EAAC;KAAM,IAAE,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}