{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  class: \"register-card card\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"客户注册\", -1 /* CACHED */)), $data.message ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(['alert', $data.success ? 'alert-success' : 'alert-danger'])\n  }, _toDisplayString($data.message), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.register && $options.register(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"用户名\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.username = $event),\n    required: \"\",\n    placeholder: \"请输入用户名\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.username]]), $data.errors.username ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($data.errors.username), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_5, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"密码\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.password = $event),\n    required: \"\",\n    placeholder: \"请输入至少6位密码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.password]]), $data.errors.password ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString($data.errors.password), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"phone\"\n  }, \"电话\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"tel\",\n    id: \"phone\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.phone = $event),\n    required: \"\",\n    placeholder: \"请输入11位手机号码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.phone]]), $data.errors.phone ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, _toDisplayString($data.errors.phone), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_9, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"defaultLocation\"\n  }, \"默认交易地点\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"defaultLocation\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.defaultLocation = $event),\n    required: \"\",\n    placeholder: \"请输入默认交易地点\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.defaultLocation]])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn primary-btn\",\n    disabled: $data.isSubmitting\n  }, _toDisplayString($data.isSubmitting ? '注册中...' : '注册'), 9 /* TEXT, PROPS */, _hoisted_10), _cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    class: \"login-link\"\n  }, [_createTextVNode(\" 已有账号？\"), _createElementVNode(\"a\", {\n    href: \"/login\",\n    class: \"primary-link\"\n  }, \"立即登录\")], -1 /* CACHED */))], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","message","_normalizeClass","success","onSubmit","_cache","_withModifiers","args","$options","register","_hoisted_3","for","type","id","form","username","$event","required","placeholder","errors","_hoisted_4","_toDisplayString","_hoisted_5","password","_hoisted_6","_hoisted_7","phone","_hoisted_8","_hoisted_9","defaultLocation","disabled","isSubmitting","_hoisted_10","href"],"sources":["D:\\game\\SE\\litemall\\simple-shop-frontend\\frontend\\src\\views\\CustomerRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <div class=\"register-card card\">\n      <h2>客户注册</h2>\n      \n      <div v-if=\"message\" :class=\"['alert', success ? 'alert-success' : 'alert-danger']\">\n        {{ message }}\n      </div>\n      \n      <form @submit.prevent=\"register\">\n        <div class=\"form-group\">\n          <label for=\"username\">用户名</label>\n          <input \n            type=\"text\" \n            id=\"username\" \n            v-model=\"form.username\" \n            required\n            placeholder=\"请输入用户名\"\n          >\n          <span v-if=\"errors.username\" class=\"error\">{{ errors.username }}</span>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"password\">密码</label>\n          <input \n            type=\"password\" \n            id=\"password\" \n            v-model=\"form.password\" \n            required\n            placeholder=\"请输入至少6位密码\"\n          >\n          <span v-if=\"errors.password\" class=\"error\">{{ errors.password }}</span>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"phone\">电话</label>\n          <input \n            type=\"tel\" \n            id=\"phone\" \n            v-model=\"form.phone\" \n            required\n            placeholder=\"请输入11位手机号码\"\n          >\n          <span v-if=\"errors.phone\" class=\"error\">{{ errors.phone }}</span>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"defaultLocation\">默认交易地点</label>\n          <input \n            type=\"text\" \n            id=\"defaultLocation\" \n            v-model=\"form.defaultLocation\" \n            required\n            placeholder=\"请输入默认交易地点\"\n          >\n        </div>\n        \n        <button type=\"submit\" class=\"btn primary-btn\" :disabled=\"isSubmitting\">\n          {{ isSubmitting ? '注册中...' : '注册' }}\n        </button>\n        \n        <div class=\"login-link\">\n          已有账号？<a href=\"/login\" class=\"primary-link\">立即登录</a>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CustomerRegister',\n  data() {\n    return {\n      form: {\n        username: '',\n        password: '',\n        phone: '',\n        defaultLocation: ''\n      },\n      errors: {},\n      message: '',\n      success: false,\n      isSubmitting: false\n    }\n  },\n  created() {\n    // 如果已登录为用户，跳转到首页\n    if (localStorage.getItem('customerLoggedIn')) {\n      this.$router.push('/')\n    }\n    // 如果已登录为卖家，提示并跳转到首页\n    if (localStorage.getItem('sellerLoggedIn')) {\n      this.errorMessage = '请先退出卖家登录'\n      setTimeout(() => {\n        this.$router.push('/')\n      }, 2000)\n    }\n  },\n  methods: {\n    // 客户端验证\n    validateForm() {\n      this.errors = {};\n      let isValid = true;\n      \n      // 验证手机号\n      if (!this.form.phone || !this.form.phone.match(/^1[3-9]\\d{9}$/)) {\n        this.errors.phone = '请输入有效的11位手机号码';\n        isValid = false;\n      }\n      \n      // 验证密码长度\n      if (!this.form.password || this.form.password.length < 6) {\n        this.errors.password = '密码长度不能少于6位';\n        isValid = false;\n      }\n      \n      // 验证用户名\n      if (!this.form.username || this.form.username.trim().length === 0) {\n        this.errors.username = '用户名不能为空';\n        isValid = false;\n      }\n      \n      return isValid;\n    },\n    \n    async register() {\n      // 客户端验证\n      if (!this.validateForm()) {\n        return;\n      }\n      \n      this.isSubmitting = true;\n      this.message = '';\n      \n      try {\n        const response = await this.$axios.post('/register', null, {\n          params: {\n            username: this.form.username,\n            password: this.form.password,\n            phone: this.form.phone,\n            defaultLocation: this.form.defaultLocation\n          }\n        });\n        \n        const result = response.data;\n        if (result.success) {\n          this.success = true;\n          this.message = result.message;\n          \n          // 注册成功后自动登录\n          await this.autoLogin();\n        } else {\n          this.success = false;\n          this.message = result.message;\n        }\n      } catch (err) {\n        this.success = false;\n        this.message = '注册失败，请稍后重试';\n        console.error(err);\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    \n    async autoLogin() {\n      try {\n        const response = await this.$axios.post('/login', null, {\n          params: {\n            username: this.form.username,\n            password: this.form.password\n          }\n        });\n        \n        if (response.data.success) {\n          // 保存登录状态\n          localStorage.setItem('customerLoggedIn', 'true');\n          localStorage.setItem('customerUsername', this.form.username);\n          \n          // 跳转到首页\n          setTimeout(() => {\n            this.$router.push('/');\n          }, 1000);\n        }\n      } catch (err) {\n        console.error('自动登录失败:', err);\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 70vh;\n  padding: 20px;\n}\n\n.register-card {\n  width: 100%;\n  max-width: 450px;\n  padding: 30px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  background-color: #fff;\n}\n\n.register-card h2 {\n  text-align: center;\n  margin-bottom: 25px;\n  color: #333;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: 500;\n  color: #555;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 10px 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n  transition: border-color 0.3s;\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: #E02E24; /* 拼多多红 */\n}\n\n.error {\n  display: block;\n  color: #f44336;\n  font-size: 14px;\n  margin-top: 5px;\n}\n\n.alert {\n  padding: 12px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  text-align: center;\n}\n\n.alert-success {\n  background-color: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}\n\n.alert-danger {\n  background-color: #f8d7da;\n  color: #721c24;\n  border: 1px solid #f5c6cb;\n}\n\n.btn {\n  width: 100%;\n  padding: 12px;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.primary-btn {\n  background-color: #E02E24; /* 拼多多红 */\n}\n\n.primary-btn:hover:not(:disabled) {\n  background-color: #c81623;\n}\n\n.btn:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\n.login-link {\n  text-align: center;\n  margin-top: 20px;\n  color: #666;\n}\n\n.primary-link {\n  color: #E02E24; /* 拼多多红 */\n  text-decoration: none;\n  transition: opacity 0.2s;\n}\n\n.primary-link:hover {\n  opacity: 0.8;\n}\n\n.login-link a:hover {\n  text-decoration: underline;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}