{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport default {\n  name: 'ProductHistory',\n  data() {\n    return {\n      products: [],\n      loading: true,\n      error: ''\n    };\n  },\n  created() {\n    this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        this.loading = true;\n        const response = await this.$axios.get('/products'); // 实际请求：http://localhost:8081/api/products\n        this.products = response.data;\n        this.error = '';\n      } catch (err) {\n        this.error = '获取商品列表失败';\n        console.error(err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取当前在售商品数量\n    getActiveProductsCount() {\n      return this.products.filter(p => p.isActive).length;\n    },\n    async toggleActive(product) {\n      try {\n        if (product.isActive) {\n          // 当前是“在售”，执行下架\n          await this.$axios.put(`/products/${product.id}/deactivate`);\n        } else {\n          // 当前是“已下架”，执行上架\n          // 先检查是否有其他在售商品\n          const activeProducts = this.products.filter(p => p.isActive && p.id !== product.id);\n\n          // 先上架当前商品\n          await this.$axios.put(`/products/${product.id}/activate`);\n\n          // 再将其他所有在售商品下架\n          if (activeProducts.length > 0) {\n            // 显示提示信息\n            this.error = `已自动将 ${activeProducts.length} 个商品下架，确保只有一个在售商品`;\n\n            // 延迟清除提示信息\n            setTimeout(() => {\n              this.error = '';\n            }, 3000);\n\n            // 逐个下架其他商品\n            for (const p of activeProducts) {\n              await this.$axios.put(`/products/${p.id}/deactivate`);\n            }\n          }\n        }\n\n        // 刷新商品列表\n        this.fetchProducts();\n      } catch (err) {\n        this.error = '操作失败，请重试';\n        console.error(err);\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    }\n  }\n};","map":{"version":3,"names":["name","data","products","loading","error","created","fetchProducts","methods","response","$axios","get","err","console","getActiveProductsCount","filter","p","isActive","length","toggleActive","product","put","id","activeProducts","setTimeout","formatDate","dateString","date","Date","toLocaleString"],"sources":["E:\\kelong\\litemall\\simple-shop-frontend\\frontend\\src\\views\\ProductHistory.vue"],"sourcesContent":["<template>\r\n    <div class=\"product-history\">\r\n        <h1>商品历史记录</h1>\r\n\r\n        <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n\r\n        <div v-if=\"error\" class=\"alert alert-danger\">\r\n            {{ error }}\r\n        </div>\r\n\r\n        <!-- 提示信息：当前系统只允许一个商品在售 -->\r\n        <div class=\"alert alert-info\" v-if=\"!loading && products.length > 0\">\r\n            系统提示：当前仅允许一个商品处于在售状态，新商品上架时其他商品将自动下架\r\n        </div>\r\n\r\n        <table v-if=\"!loading && products.length > 0\" class=\"product-table\">\r\n            <thead>\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>名称</th>\r\n                <th>价格</th>\r\n                <th>状态</th>\r\n                <th>创建时间</th>\r\n                <th>操作</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr v-for=\"product in products\" :key=\"product.id\">\r\n                <td>{{ product.id }}</td>\r\n                <td>{{ product.name }}</td>\r\n                <td>¥{{ product.price.toFixed(2) }}</td>\r\n                <td>\r\n                    <span v-if=\"product.active\" class=\"status-active\">在售</span>\r\n                    <span v-else class=\"status-inactive\">已下架</span>\r\n                    <span v-if=\"product.frozen\" class=\"status-frozen\"> (已冻结)</span>\r\n                </td>\r\n                <td>{{ formatDate(product.createdAt) }}</td>\r\n                <td>\r\n                    <!-- 编辑按钮 -->\r\n                    <a :href=\"'/seller/product/new?id=' + product.id\" class=\"btn\">编辑</a>\r\n\r\n                    <!-- 上架 / 下架 按钮 -->\r\n                    <button\r\n                            class=\"btn\"\r\n                            :class=\"{ 'btn-secondary': product.active, 'btn-success': !product.active }\"\r\n                            @click=\"toggleActive(product)\"\r\n                            :disabled=\"product.active && getActiveProductsCount() <= 1\">\r\n                        {{ product.active ? '下架' : '上架' }}\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <div v-if=\"!loading && products.length === 0\" class=\"alert alert-danger\">\r\n            暂无商品记录\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n      name: 'ProductHistory',\r\n      data() {\r\n        return {\r\n          products: [],\r\n          loading: true,\r\n          error: ''\r\n        }\r\n      },\r\n      created() {\r\n        this.fetchProducts()\r\n      },\r\n      methods: {\r\n        async fetchProducts() {\r\n          try {\r\n            this.loading = true\r\n            const response = await this.$axios.get('/products') // 实际请求：http://localhost:8081/api/products\r\n            this.products = response.data\r\n            this.error = ''\r\n          } catch (err) {\r\n            this.error = '获取商品列表失败'\r\n            console.error(err)\r\n          } finally {\r\n            this.loading = false\r\n          }\r\n        },\r\n\r\n        // 获取当前在售商品数量\r\n        getActiveProductsCount() {\r\n          return this.products.filter(p => p.isActive).length\r\n        },\r\n\r\n        async toggleActive(product) {\r\n          try {\r\n            if (product.isActive) {\r\n              // 当前是“在售”，执行下架\r\n              await this.$axios.put(`/products/${product.id}/deactivate`)\r\n            } else {\r\n              // 当前是“已下架”，执行上架\r\n              // 先检查是否有其他在售商品\r\n              const activeProducts = this.products.filter(p => p.isActive && p.id !== product.id)\r\n\r\n              // 先上架当前商品\r\n              await this.$axios.put(`/products/${product.id}/activate`)\r\n\r\n              // 再将其他所有在售商品下架\r\n              if (activeProducts.length > 0) {\r\n                // 显示提示信息\r\n                this.error = `已自动将 ${activeProducts.length} 个商品下架，确保只有一个在售商品`\r\n\r\n                // 延迟清除提示信息\r\n                setTimeout(() => {\r\n                  this.error = ''\r\n                }, 3000)\r\n\r\n                // 逐个下架其他商品\r\n                for (const p of activeProducts) {\r\n                  await this.$axios.put(`/products/${p.id}/deactivate`)\r\n                }\r\n              }\r\n            }\r\n\r\n            // 刷新商品列表\r\n            this.fetchProducts()\r\n          } catch (err) {\r\n            this.error = '操作失败，请重试'\r\n            console.error(err)\r\n          }\r\n        },\r\n\r\n        formatDate(dateString) {\r\n          if (!dateString) return ''\r\n          const date = new Date(dateString)\r\n          return date.toLocaleString()\r\n        }\r\n      }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .loading {\r\n      text-align: center;\r\n      padding: 2rem;\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    .alert {\r\n      padding: 1rem;\r\n      margin: 1rem 0;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    .alert-danger {\r\n      background-color: #f8d7da;\r\n      color: #721c24;\r\n      border: 1px solid #f5c6cb;\r\n    }\r\n\r\n    .alert-info {\r\n      background-color: #d1ecf1;\r\n      color: #0c5460;\r\n      border: 1px solid #bee5eb;\r\n    }\r\n\r\n    .product-table {\r\n      width: 100%;\r\n      border-collapse: collapse;\r\n      margin-top: 1rem;\r\n    }\r\n\r\n    .product-table th,\r\n    .product-table td {\r\n      padding: 0.75rem;\r\n      text-align: left;\r\n      border-bottom: 1px solid #ddd;\r\n    }\r\n\r\n    .status-active {\r\n      color: #28a745;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .status-inactive {\r\n      color: #6c757d;\r\n    }\r\n\r\n    .status-frozen {\r\n      color: #dc3545;\r\n    }\r\n\r\n    .btn {\r\n      margin-right: 0.5rem;\r\n      padding: 0.25rem 0.75rem;\r\n      color: white;\r\n      text-decoration: none;\r\n      border: none;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n    }\r\n\r\n    /* 下架按钮 - 灰色 */\r\n    .btn-secondary {\r\n      background: #6c757d;\r\n    }\r\n\r\n    /* 上架按钮 - 绿色 */\r\n    .btn-success {\r\n      background: #28a745;\r\n    }\r\n\r\n    .btn:disabled {\r\n      background: #ccc;\r\n      cursor: not-allowed;\r\n    }\r\n</style>\r\n"],"mappings":";;AA6DI,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,IAAI,CAACH,OAAM,GAAI,IAAG;QAClB,MAAMK,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,WAAW,GAAE;QACpD,IAAI,CAACR,QAAO,GAAIM,QAAQ,CAACP,IAAG;QAC5B,IAAI,CAACG,KAAI,GAAI,EAAC;MAChB,EAAE,OAAOO,GAAG,EAAE;QACZ,IAAI,CAACP,KAAI,GAAI,UAAS;QACtBQ,OAAO,CAACR,KAAK,CAACO,GAAG;MACnB,UAAU;QACR,IAAI,CAACR,OAAM,GAAI,KAAI;MACrB;IACF,CAAC;IAED;IACAU,sBAAsBA,CAAA,EAAG;MACvB,OAAO,IAAI,CAACX,QAAQ,CAACY,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,QAAQ,CAAC,CAACC,MAAK;IACpD,CAAC;IAED,MAAMC,YAAYA,CAACC,OAAO,EAAE;MAC1B,IAAI;QACF,IAAIA,OAAO,CAACH,QAAQ,EAAE;UACpB;UACA,MAAM,IAAI,CAACP,MAAM,CAACW,GAAG,CAAC,aAAaD,OAAO,CAACE,EAAE,aAAa;QAC5D,OAAO;UACL;UACA;UACA,MAAMC,cAAa,GAAI,IAAI,CAACpB,QAAQ,CAACY,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,QAAO,IAAKD,CAAC,CAACM,EAAC,KAAMF,OAAO,CAACE,EAAE;;UAElF;UACA,MAAM,IAAI,CAACZ,MAAM,CAACW,GAAG,CAAC,aAAaD,OAAO,CAACE,EAAE,WAAW;;UAExD;UACA,IAAIC,cAAc,CAACL,MAAK,GAAI,CAAC,EAAE;YAC7B;YACA,IAAI,CAACb,KAAI,GAAI,QAAQkB,cAAc,CAACL,MAAM,mBAAkB;;YAE5D;YACAM,UAAU,CAAC,MAAM;cACf,IAAI,CAACnB,KAAI,GAAI,EAAC;YAChB,CAAC,EAAE,IAAI;;YAEP;YACA,KAAK,MAAMW,CAAA,IAAKO,cAAc,EAAE;cAC9B,MAAM,IAAI,CAACb,MAAM,CAACW,GAAG,CAAC,aAAaL,CAAC,CAACM,EAAE,aAAa;YACtD;UACF;QACF;;QAEA;QACA,IAAI,CAACf,aAAa,CAAC;MACrB,EAAE,OAAOK,GAAG,EAAE;QACZ,IAAI,CAACP,KAAI,GAAI,UAAS;QACtBQ,OAAO,CAACR,KAAK,CAACO,GAAG;MACnB;IACF,CAAC;IAEDa,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,EAAC;MACzB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU;MAChC,OAAOC,IAAI,CAACE,cAAc,CAAC;IAC7B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}