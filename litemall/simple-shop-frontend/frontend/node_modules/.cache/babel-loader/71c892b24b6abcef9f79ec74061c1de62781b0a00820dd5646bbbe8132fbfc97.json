{"ast":null,"code":"export default {\n  name: 'CustomerList',\n  data() {\n    return {\n      customers: [],\n      selectedCustomer: null,\n      customerOrders: [],\n      loading: true,\n      error: ''\n    };\n  },\n  created() {\n    this.fetchCustomers();\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        this.loading = true;\n        // 调用后端API获取客户列表\n        const response = await this.$axios.get('/customers');\n        this.customers = response.data;\n        this.error = '';\n      } catch (err) {\n        this.error = '获取客户列表失败';\n        console.error(err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async viewCustomerDetails(customer) {\n      try {\n        this.selectedCustomer = customer;\n        this.loading = true;\n        // 调用后端API获取客户的订单记录\n        const response = await this.$axios.get(`/customers/${customer.id}/orders`);\n        this.customerOrders = response.data;\n        this.error = '';\n      } catch (err) {\n        this.error = '获取订单记录失败';\n        console.error(err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    getOrderStatusClass(status) {\n      switch (status) {\n        case 'COMPLETED':\n        case 'completed':\n          return 'status-completed';\n        case 'PENDING':\n        case 'pending':\n          return 'status-pending';\n        case 'CANCELLED':\n        case 'cancelled':\n          return 'status-cancelled';\n        default:\n          return '';\n      }\n    },\n    getOrderStatusText(status) {\n      switch (status) {\n        case 'COMPLETED':\n        case 'completed':\n          return '已完成';\n        case 'PENDING':\n        case 'pending':\n          return '处理中';\n        case 'CANCELLED':\n        case 'cancelled':\n          return '已取消';\n        default:\n          return status || '未知';\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","customers","selectedCustomer","customerOrders","loading","error","created","fetchCustomers","methods","response","$axios","get","err","console","viewCustomerDetails","customer","id","formatDate","dateString","date","Date","toLocaleString","year","month","day","hour","minute","getOrderStatusClass","status","getOrderStatusText"],"sources":["D:\\game\\Trae\\litemall+\\litemall\\simple-shop-frontend\\frontend\\src\\views\\CustomerList.vue"],"sourcesContent":["<template>\r\n  <div class=\"customer-list\">\r\n    <h1>客户管理</h1>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n\r\n    <div v-if=\"error\" class=\"alert alert-danger\">\r\n      {{ error }}\r\n    </div>\r\n\r\n    <div v-if=\"selectedCustomer\" class=\"customer-details\">\r\n      <h2>客户详情</h2>\r\n      <div class=\"detail-card\">\r\n        <p><strong>用户名：</strong>{{ selectedCustomer.username }}</p>\r\n        <p><strong>电话：</strong>{{ selectedCustomer.phone }}</p>\r\n        <p><strong>注册时间：</strong>{{ formatDate(selectedCustomer.updatedAt) }}</p>\r\n        <p v-if=\"selectedCustomer.default_address\"><strong>默认地址：</strong>{{ selectedCustomer.default_address }}</p>\r\n        <button class=\"btn btn-secondary\" @click=\"selectedCustomer = null\">返回列表</button>\r\n      </div>\r\n\r\n      <h3>订单记录</h3>\r\n      <div v-if=\"customerOrders.length === 0\" class=\"alert alert-info\">\r\n        暂无订单记录\r\n      </div>\r\n      <table v-else>\r\n        <thead>\r\n          <tr>\r\n            <th>订单ID</th>\r\n            <th>商品</th>\r\n            <th>价格</th>\r\n            <th>数量</th>\r\n            <th>下单时间</th>\r\n            <th>订单状态</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"order in customerOrders\" :key=\"order.id\">\r\n            <td>{{ order.id }}</td>\r\n            <td>{{ order.product_name || '未知商品' }}</td>\r\n            <td>¥{{ (order.price || 0).toFixed(2) }}</td>\r\n            <td>{{ order.quantity || 1 }}</td>\r\n            <td>{{ formatDate(order.created_at) }}</td>\r\n            <td>\r\n              <span :class=\"getOrderStatusClass(order.status)\">{{ getOrderStatusText(order.status) }}</span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <table v-else-if=\"!loading && customers.length > 0\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>用户名</th>\r\n          <th>电话</th>\r\n          <th>注册时间</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"customer in customers\" :key=\"customer.id\">\r\n          <td>{{ customer.id }}</td>\r\n            <td>{{ customer.username }}</td>\r\n            <td>{{ customer.phone }}</td>\r\n            <td>{{ formatDate(customer.updatedAt) }}</td>\r\n          <td>\r\n            <button class=\"btn\" @click=\"viewCustomerDetails(customer)\">查看详情</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <div v-if=\"!loading && customers.length === 0\" class=\"alert alert-info\">\r\n      暂无客户记录\r\n    </div>\r\n    <br>\r\n    <a href=\"/seller/dashboard\" class=\"btn btn-secondary\" style=\"margin-bottom: 1rem;\">\r\n      返回卖家后台\r\n    </a>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CustomerList',\r\n  data() {\r\n    return {\r\n      customers: [],\r\n      selectedCustomer: null,\r\n      customerOrders: [],\r\n      loading: true,\r\n      error: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchCustomers()\r\n  },\r\n  methods: {\r\n    async fetchCustomers() {\r\n      try {\r\n        this.loading = true\r\n        // 调用后端API获取客户列表\r\n        const response = await this.$axios.get('/customers')\r\n        this.customers = response.data\r\n        this.error = ''\r\n      } catch (err) {\r\n        this.error = '获取客户列表失败'\r\n        console.error(err)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    async viewCustomerDetails(customer) {\r\n      try {\r\n        this.selectedCustomer = customer\r\n        this.loading = true\r\n        // 调用后端API获取客户的订单记录\r\n        const response = await this.$axios.get(`/customers/${customer.id}/orders`)\r\n        this.customerOrders = response.data\r\n        this.error = ''\r\n      } catch (err) {\r\n        this.error = '获取订单记录失败'\r\n        console.error(err)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return ''\r\n      const date = new Date(dateString)\r\n      return date.toLocaleString('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      })\r\n    },\r\n    getOrderStatusClass(status) {\r\n      switch (status) {\r\n        case 'COMPLETED':\r\n        case 'completed':\r\n          return 'status-completed'\r\n        case 'PENDING':\r\n        case 'pending':\r\n          return 'status-pending'\r\n        case 'CANCELLED':\r\n        case 'cancelled':\r\n          return 'status-cancelled'\r\n        default:\r\n          return ''\r\n      }\r\n    },\r\n    getOrderStatusText(status) {\r\n      switch (status) {\r\n        case 'COMPLETED':\r\n        case 'completed':\r\n          return '已完成'\r\n        case 'PENDING':\r\n        case 'pending':\r\n          return '处理中'\r\n        case 'CANCELLED':\r\n        case 'cancelled':\r\n          return '已取消'\r\n        default:\r\n          return status || '未知'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.customer-list {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nh1, h2, h3 {\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 40px;\r\n  font-size: 18px;\r\n  color: #666;\r\n}\r\n\r\n.alert {\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.alert-danger {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  border: 1px solid #f5c6cb;\r\n}\r\n\r\n.alert-info {\r\n  background-color: #d1ecf1;\r\n  color: #0c5460;\r\n  border: 1px solid #bee5eb;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\nth, td {\r\n  padding: 12px 15px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\nth {\r\n  background-color: #f8f9fa;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\ntr:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.btn {\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  text-align: center;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.btn {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background-color: #545b62;\r\n}\r\n\r\n.status-completed {\r\n  color: #28a745;\r\n  font-weight: bold;\r\n}\r\n\r\n.status-pending {\r\n  color: #ffc107;\r\n  font-weight: bold;\r\n}\r\n\r\n.status-cancelled {\r\n  color: #dc3545;\r\n  font-weight: bold;\r\n}\r\n\r\n.customer-details {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.detail-card {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.detail-card p {\r\n  margin: 10px 0;\r\n  font-size: 16px;\r\n}\r\n</style>"],"mappings":"AAoFA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,gBAAgB,EAAE,IAAI;MACtBC,cAAc,EAAE,EAAE;MAClBC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,IAAI,CAACH,OAAM,GAAI,IAAG;QAClB;QACA,MAAMK,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,YAAY;QACnD,IAAI,CAACV,SAAQ,GAAIQ,QAAQ,CAACT,IAAG;QAC7B,IAAI,CAACK,KAAI,GAAI,EAAC;MAChB,EAAE,OAAOO,GAAG,EAAE;QACZ,IAAI,CAACP,KAAI,GAAI,UAAS;QACtBQ,OAAO,CAACR,KAAK,CAACO,GAAG;MACnB,UAAU;QACR,IAAI,CAACR,OAAM,GAAI,KAAI;MACrB;IACF,CAAC;IACD,MAAMU,mBAAmBA,CAACC,QAAQ,EAAE;MAClC,IAAI;QACF,IAAI,CAACb,gBAAe,GAAIa,QAAO;QAC/B,IAAI,CAACX,OAAM,GAAI,IAAG;QAClB;QACA,MAAMK,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,cAAcI,QAAQ,CAACC,EAAE,SAAS;QACzE,IAAI,CAACb,cAAa,GAAIM,QAAQ,CAACT,IAAG;QAClC,IAAI,CAACK,KAAI,GAAI,EAAC;MAChB,EAAE,OAAOO,GAAG,EAAE;QACZ,IAAI,CAACP,KAAI,GAAI,UAAS;QACtBQ,OAAO,CAACR,KAAK,CAACO,GAAG;MACnB,UAAU;QACR,IAAI,CAACR,OAAM,GAAI,KAAI;MACrB;IACF,CAAC;IACDa,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,EAAC;MACzB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU;MAChC,OAAOC,IAAI,CAACE,cAAc,CAAC,OAAO,EAAE;QAClCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,SAAS;QAChBC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDC,mBAAmBA,CAACC,MAAM,EAAE;MAC1B,QAAQA,MAAM;QACZ,KAAK,WAAW;QAChB,KAAK,WAAW;UACd,OAAO,kBAAiB;QAC1B,KAAK,SAAS;QACd,KAAK,SAAS;UACZ,OAAO,gBAAe;QACxB,KAAK,WAAW;QAChB,KAAK,WAAW;UACd,OAAO,kBAAiB;QAC1B;UACE,OAAO,EAAC;MACZ;IACF,CAAC;IACDC,kBAAkBA,CAACD,MAAM,EAAE;MACzB,QAAQA,MAAM;QACZ,KAAK,WAAW;QAChB,KAAK,WAAW;UACd,OAAO,KAAI;QACb,KAAK,SAAS;QACd,KAAK,SAAS;UACZ,OAAO,KAAI;QACb,KAAK,WAAW;QAChB,KAAK,WAAW;UACd,OAAO,KAAI;QACb;UACE,OAAOA,MAAK,IAAK,IAAG;MACxB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}