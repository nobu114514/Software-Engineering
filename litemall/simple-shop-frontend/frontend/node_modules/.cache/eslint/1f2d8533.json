[{"E:\\购物网站\\simple-shop-frontend\\frontend\\src\\main.js":"1","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\App.vue":"2","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\router\\index.js":"3","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\SellerLogin.vue":"4","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\SellerDashboard.vue":"5","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\BuyerList.vue":"6","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\ChangePassword.vue":"7","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\HomeView.vue":"8","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\ProductForm.vue":"9","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\ProductHistory.vue":"10"},{"size":373,"mtime":1759741425926,"results":"11","hashOfConfig":"12"},{"size":3307,"mtime":1759741425927,"results":"13","hashOfConfig":"12"},{"size":1685,"mtime":1759741425926,"results":"14","hashOfConfig":"12"},{"size":1755,"mtime":1759741425928,"results":"15","hashOfConfig":"12"},{"size":2498,"mtime":1759741425928,"results":"16","hashOfConfig":"12"},{"size":2593,"mtime":1759741425930,"results":"17","hashOfConfig":"12"},{"size":2244,"mtime":1759741425930,"results":"18","hashOfConfig":"12"},{"size":4073,"mtime":1759741425927,"results":"19","hashOfConfig":"12"},{"size":3035,"mtime":1759741425929,"results":"20","hashOfConfig":"12"},{"size":3151,"mtime":1759741425929,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"m92ms4",{"filePath":"26","messages":"27","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},"E:\\购物网站\\simple-shop-frontend\\frontend\\src\\main.js",["54"],"import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport axios from 'axios'\n\n// 配置axios\naxios.defaults.baseURL = 'http://localhost:8081/api'\n// 允许跨域携带cookie\naxios.defaults.withCredentials = true\n\n// 全局注册axios\nconst app = createApp(App)\napp.config.globalProperties.$axios = axios\napp.use(router).mount('#app')\n",[],"E:\\购物网站\\simple-shop-frontend\\frontend\\src\\App.vue",["55"],"<template>\n  <div id=\"app\">\n    <nav class=\"navbar\">\n      <div class=\"navbar-container\">\n        <a href=\"/\" class=\"navbar-logo\">极简商店</a>\n        <div class=\"navbar-menu\">\n          <a href=\"/seller/login\" v-if=\"!isSellerLoggedIn\">卖家入口</a>\n          <a href=\"/seller/dashboard\" v-if=\"isSellerLoggedIn\">卖家后台</a>\n          <button @click=\"logout\" v-if=\"isSellerLoggedIn\">退出登录</button>\n        </div>\n      </div>\n    </nav>\n    <main class=\"container\">\n      <router-view />\n    </main>\n    <footer class=\"footer\">\n      <p>© 2023 极简商店 - 保留所有权利</p>\n    </footer>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      isSellerLoggedIn: false\n    }\n  },\n  created() {\n    this.checkLoginStatus()\n  },\n  methods: {\n    checkLoginStatus() {\n      this.isSellerLoggedIn = !!localStorage.getItem('sellerLoggedIn')\n    },\n    logout() {\n      localStorage.removeItem('sellerLoggedIn')\n      this.isSellerLoggedIn = false\n      this.$router.push('/seller/login')\n    }\n  },\n  watch: {\n    $route() {\n      this.checkLoginStatus()\n    }\n  }\n}\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: Arial, sans-serif;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.navbar {\n  background-color: #333;\n  color: white;\n  padding: 1rem 0;\n}\n\n.navbar-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.navbar-logo {\n  color: white;\n  text-decoration: none;\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n\n.navbar-menu {\n  display: flex;\n  gap: 1rem;\n}\n\n.navbar-menu a {\n  color: white;\n  text-decoration: none;\n}\n\n.navbar-menu button {\n  background: none;\n  border: 1px solid white;\n  color: white;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n}\n\n.container {\n  flex: 1;\n  max-width: 1200px;\n  margin: 2rem auto;\n  padding: 0 1rem;\n}\n\n.footer {\n  background-color: #333;\n  color: white;\n  text-align: center;\n  padding: 1rem 0;\n  margin-top: auto;\n}\n\n/* 通用样式 */\n.btn {\n  display: inline-block;\n  padding: 0.5rem 1rem;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 1rem;\n}\n\n.btn-secondary {\n  background-color: #f44336;\n}\n\n.btn:hover {\n  opacity: 0.9;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.card {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.alert {\n  padding: 1rem;\n  margin-bottom: 1rem;\n  border-radius: 4px;\n}\n\n.alert-success {\n  background-color: #dff0d8;\n  color: #3c763d;\n  border: 1px solid #d6e9c6;\n}\n\n.alert-danger {\n  background-color: #f2dede;\n  color: #a94442;\n  border: 1px solid #ebccd1;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 1rem;\n}\n\ntable th,\ntable td {\n  padding: 0.75rem;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\ntable th {\n  background-color: #f5f5f5;\n}\n\n.dashboard-menu {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  flex-wrap: wrap;\n}\n</style>\n",[],"E:\\购物网站\\simple-shop-frontend\\frontend\\src\\router\\index.js",["56"],"import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport SellerLogin from '../views/SellerLogin.vue'\nimport SellerDashboard from '../views/SellerDashboard.vue'\nimport ProductForm from '../views/ProductForm.vue'\nimport ProductHistory from '../views/ProductHistory.vue'\nimport BuyerList from '../views/BuyerList.vue'\nimport ChangePassword from '../views/ChangePassword.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/seller/login',\n    name: 'sellerLogin',\n    component: SellerLogin\n  },\n  {\n    path: '/seller/dashboard',\n    name: 'sellerDashboard',\n    component: SellerDashboard,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/seller/product/new',\n    name: 'newProduct',\n    component: ProductForm,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/seller/products',\n    name: 'productHistory',\n    component: ProductHistory,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/seller/buyers',\n    name: 'buyerList',\n    component: BuyerList,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/seller/change-password',\n    name: 'changePassword',\n    component: ChangePassword,\n    meta: { requiresAuth: true }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// 路由守卫，检查是否已登录\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // 检查是否已登录\n    if (!localStorage.getItem('sellerLoggedIn')) {\n      next({ name: 'sellerLogin' })\n    } else {\n      next()\n    }\n  } else {\n    next()\n  }\n})\n\nexport default router\n","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\SellerLogin.vue",["57"],"<template>\n  <div class=\"login-container\">\n    <div class=\"login-card card\">\n      <h2>卖家登录</h2>\n      \n      <div v-if=\"error\" class=\"alert alert-danger\">\n        {{ error }}\n      </div>\n      \n      <form @submit.prevent=\"login\">\n        <div class=\"form-group\">\n          <label for=\"username\">用户名</label>\n          <input type=\"text\" id=\"username\" v-model=\"username\" required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">密码</label>\n          <input type=\"password\" id=\"password\" v-model=\"password\" required>\n        </div>\n        <button type=\"submit\" class=\"btn\">登录</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SellerLogin',\n  data() {\n    return {\n      username: '',\n      password: '',\n      error: ''\n    }\n  },\n  created() {\n    // 如果已登录，跳转到后台\n    if (localStorage.getItem('sellerLoggedIn')) {\n      this.$router.push('/seller/dashboard')\n    }\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await this.$axios.post('/seller/login', null, {\n          params: {\n            username: this.username,\n            password: this.password\n          }\n        })\n        \n        if (response.data) {\n          localStorage.setItem('sellerLoggedIn', 'true')\n          this.$router.push('/seller/dashboard')\n        } else {\n          this.error = '用户名或密码错误'\n        }\n      } catch (err) {\n        this.error = '登录失败，请重试'\n        console.error(err)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 50vh;\n}\n\n.login-card {\n  width: 100%;\n  max-width: 400px;\n}\n</style>\n","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\SellerDashboard.vue",["58"],"<template>\n  <div class=\"seller-dashboard\">\n    <h1>卖家后台</h1>\n    \n    <div class=\"dashboard-menu\">\n      <a href=\"/seller/product/new\" class=\"btn\">发布新商品</a>\n      <a href=\"/seller/products\" class=\"btn\">商品历史</a>\n      <a href=\"/seller/buyers\" class=\"btn\">购买意向列表</a>\n      <a href=\"/seller/change-password\" class=\"btn\">修改密码</a>\n    </div>\n    \n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\n    \n    <div v-if=\"error\" class=\"alert alert-danger\">\n      {{ error }}\n    </div>\n    \n    <div v-if=\"activeProduct\" class=\"card\">\n      <h2>当前在售商品</h2>\n      <h3>{{ activeProduct.name }}</h3>\n      <p>价格: ¥{{ activeProduct.price.toFixed(2) }}</p>\n      <p>状态: {{ activeProduct.isFrozen ? '交易中（已冻结）' : '可购买' }}</p>\n      \n      <div class=\"actions\">\n        <button \n          class=\"btn\" \n          @click=\"toggleFreeze\"\n          :disabled=\"!activeProduct\">\n          {{ activeProduct.isFrozen ? '解除冻结' : '冻结商品' }}\n        </button>\n        <a :href=\"'/seller/product/new?id=' + activeProduct.id\" class=\"btn\">编辑商品</a>\n      </div>\n    </div>\n    \n    <div v-if=\"!loading && !activeProduct\" class=\"alert alert-danger\">\n      当前没有在售商品，请发布新商品。\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SellerDashboard',\n  data() {\n    return {\n      activeProduct: null,\n      loading: true,\n      error: ''\n    }\n  },\n  created() {\n    this.fetchActiveProduct()\n  },\n  methods: {\n    async fetchActiveProduct() {\n      try {\n        this.loading = true\n        const response = await this.$axios.get('/products/active')\n        this.activeProduct = response.data\n        this.error = ''\n      } catch (err) {\n        this.error = '获取商品信息失败'\n        console.error(err)\n      } finally {\n        this.loading = false\n      }\n    },\n    async toggleFreeze() {\n      if (!this.activeProduct) return\n      \n      try {\n        await this.$axios.put(`/products/${this.activeProduct.id}/freeze`, null, {\n          params: { freeze: !this.activeProduct.isFrozen }\n        })\n        this.activeProduct.isFrozen = !this.activeProduct.isFrozen\n      } catch (err) {\n        this.error = '操作失败，请重试'\n        console.error(err)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.actions {\n  margin-top: 1rem;\n  display: flex;\n  gap: 1rem;\n}\n\n.loading {\n  text-align: center;\n  padding: 2rem;\n  font-size: 1.2rem;\n}\n</style>\n","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\BuyerList.vue",["59"],"<template>\n  <div class=\"buyer-list\">\n    <h1>购买意向列表</h1>\n    \n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\n    \n    <div v-if=\"error\" class=\"alert alert-danger\">\n      {{ error }}\n    </div>\n    \n    <table v-if=\"!loading && buyers.length > 0\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>商品</th>\n          <th>购买人</th>\n          <th>电话</th>\n          <th>地址</th>\n          <th>时间</th>\n          <th>状态</th>\n          <th>操作</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"buyer in buyers\" :key=\"buyer.id\">\n          <td>{{ buyer.id }}</td>\n          <td>{{ buyer.product?.name || '未知商品' }}</td>\n          <td>{{ buyer.name }}</td>\n          <td>{{ buyer.phone }}</td>\n          <td>{{ buyer.address }}</td>\n          <td>{{ formatDate(buyer.createdAt) }}</td>\n          <td>\n            <span v-if=\"buyer.isCompleted\">已完成</span>\n            <span v-else>处理中</span>\n          </td>\n          <td v-if=\"!buyer.isCompleted\">\n            <button class=\"btn\" @click=\"completeTransaction(buyer.id, true)\">交易成功</button>\n            <button class=\"btn btn-secondary\" @click=\"completeTransaction(buyer.id, false)\">交易失败</button>\n          </td>\n          <td v-else>已处理</td>\n        </tr>\n      </tbody>\n    </table>\n    \n    <div v-if=\"!loading && buyers.length === 0\" class=\"alert alert-danger\">\n      暂无购买意向记录\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'BuyerList',\n  data() {\n    return {\n      buyers: [],\n      loading: true,\n      error: ''\n    }\n  },\n  created() {\n    this.fetchBuyers()\n  },\n  methods: {\n    async fetchBuyers() {\n      try {\n        this.loading = true\n        const response = await this.$axios.get('/buyers')\n        this.buyers = response.data\n        this.error = ''\n      } catch (err) {\n        this.error = '获取购买意向失败'\n        console.error(err)\n      } finally {\n        this.loading = false\n      }\n    },\n    async completeTransaction(buyerId, success) {\n      try {\n        await this.$axios.put(`/buyers/${buyerId}/complete`, null, {\n          params: { success }\n        })\n        this.fetchBuyers()\n      } catch (err) {\n        this.error = '操作失败，请重试'\n        console.error(err)\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return date.toLocaleString()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.loading {\n  text-align: center;\n  padding: 2rem;\n  font-size: 1.2rem;\n}\n</style>\n","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\ChangePassword.vue",["60"],"<template>\n  <div class=\"change-password\">\n    <h1>修改密码</h1>\n    \n    <div v-if=\"error\" class=\"alert alert-danger\">\n      {{ error }}\n    </div>\n    \n    <div v-if=\"success\" class=\"alert alert-success\">\n      密码修改成功\n    </div>\n    \n    <form @submit.prevent=\"changePassword\" class=\"card\">\n      <div class=\"form-group\">\n        <label for=\"username\">用户名</label>\n        <input type=\"text\" id=\"username\" v-model=\"username\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"oldPassword\">旧密码</label>\n        <input type=\"password\" id=\"oldPassword\" v-model=\"oldPassword\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newPassword\">新密码</label>\n        <input type=\"password\" id=\"newPassword\" v-model=\"newPassword\" required>\n      </div>\n      <div class=\"form-actions\">\n        <button type=\"submit\" class=\"btn\">修改密码</button>\n        <a href=\"/seller/dashboard\" class=\"btn btn-secondary\">取消</a>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChangePassword',\n  data() {\n    return {\n      username: '',\n      oldPassword: '',\n      newPassword: '',\n      error: '',\n      success: false\n    }\n  },\n  methods: {\n    async changePassword() {\n      try {\n        const response = await this.$axios.post('/seller/change-password', null, {\n          params: {\n            username: this.username,\n            oldPassword: this.oldPassword,\n            newPassword: this.newPassword\n          }\n        })\n        \n        if (response.data) {\n          this.success = true\n          this.error = ''\n          // 重置表单\n          this.username = ''\n          this.oldPassword = ''\n          this.newPassword = ''\n          // 3秒后跳转到后台首页\n          setTimeout(() => {\n            this.$router.push('/seller/dashboard')\n          }, 3000)\n        } else {\n          this.error = '旧密码不正确'\n          this.success = false\n        }\n      } catch (err) {\n        this.error = '修改密码失败，请重试'\n        this.success = false\n        console.error(err)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.form-actions {\n  margin-top: 1.5rem;\n  display: flex;\n  gap: 1rem;\n}\n</style>\n","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\HomeView.vue",["61"],"<template>\n  <div class=\"home\">\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\n    \n    <div v-if=\"error\" class=\"alert alert-danger\">\n      {{ error }}\n    </div>\n    \n    <div v-if=\"product && product.isActive\" class=\"product-card card\">\n      <h1>{{ product.name }}</h1>\n      <div class=\"product-image\">\n        <img :src=\"product.imageUrl || 'https://picsum.photos/600/400'\" \n             :alt=\"product.name\" \n             class=\"product-img\">\n      </div>\n      <div class=\"product-price\">价格: ¥{{ product.price.toFixed(2) }}</div>\n      <div class=\"product-description\">\n        <h3>商品描述</h3>\n        <p>{{ product.description }}</p>\n      </div>\n      \n      <div v-if=\"product.isFrozen\" class=\"alert alert-danger\">\n        该商品正在交易中，请稍后再试。\n      </div>\n      \n      <button \n        class=\"btn\" \n        @click=\"showBuyForm = true\" \n        v-if=\"!product.isFrozen\">\n        我要购买\n      </button>\n    </div>\n    \n    <div v-if=\"!product || !product.isActive\" class=\"alert alert-danger\">\n      当前没有可购买的商品。\n    </div>\n    \n    <!-- 购买表单 -->\n    <div v-if=\"showBuyForm && product\" class=\"buy-form card\">\n      <h2>购买信息</h2>\n      <form @submit.prevent=\"submitBuy\">\n        <div class=\"form-group\">\n          <label for=\"name\">姓名</label>\n          <input type=\"text\" id=\"name\" v-model=\"buyer.name\" required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"phone\">电话</label>\n          <input type=\"tel\" id=\"phone\" v-model=\"buyer.phone\" required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"address\">地址</label>\n          <textarea id=\"address\" v-model=\"buyer.address\" required></textarea>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"notes\">备注</label>\n          <textarea id=\"notes\" v-model=\"buyer.notes\"></textarea>\n        </div>\n        <div class=\"form-actions\">\n          <button type=\"submit\" class=\"btn\">提交购买意向</button>\n          <button type=\"button\" class=\"btn btn-secondary\" @click=\"showBuyForm = false\">取消</button>\n        </div>\n      </form>\n    </div>\n    \n    <div v-if=\"buySuccess\" class=\"alert alert-success\">\n      购买意向已提交，请等待卖家联系进行线下交易。\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      product: null,\n      loading: true,\n      error: '',\n      showBuyForm: false,\n      buySuccess: false,\n      buyer: {\n        name: '',\n        phone: '',\n        address: '',\n        notes: ''\n      }\n    }\n  },\n  created() {\n    this.fetchActiveProduct()\n  },\n  methods: {\n    async fetchActiveProduct() {\n      try {\n        this.loading = true\n        const response = await this.$axios.get('/products/active')\n        this.product = response.data\n        this.error = ''\n      } catch (err) {\n        this.error = '获取商品信息失败'\n        console.error(err)\n      } finally {\n        this.loading = false\n      }\n    },\n    async submitBuy() {\n      try {\n        await this.$axios.post(`/buyers/product/${this.product.id}`, this.buyer)\n        this.buySuccess = true\n        this.showBuyForm = false\n        // 刷新商品状态\n        this.fetchActiveProduct()\n        // 5秒后隐藏成功提示\n        setTimeout(() => {\n          this.buySuccess = false\n        }, 5000)\n      } catch (err) {\n        this.error = '提交购买意向失败'\n        console.error(err)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.product-card {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.product-image {\n  margin: 1rem 0;\n}\n\n.product-img {\n  max-width: 100%;\n  height: auto;\n  border-radius: 4px;\n}\n\n.product-price {\n  font-size: 1.5rem;\n  color: #f44336;\n  margin: 1rem 0;\n}\n\n.product-description {\n  margin: 1rem 0;\n  line-height: 1.6;\n}\n\n.buy-form {\n  max-width: 600px;\n  margin: 2rem auto;\n}\n\n.form-actions {\n  display: flex;\n  gap: 1rem;\n  margin-top: 1.5rem;\n}\n\n.loading {\n  text-align: center;\n  padding: 2rem;\n  font-size: 1.2rem;\n}\n</style>\n","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\ProductForm.vue",["62"],"<template>\n  <div class=\"product-form\">\n    <h1>{{ isEditing ? '编辑商品' : '发布新商品' }}</h1>\n    \n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\n    \n    <div v-if=\"error\" class=\"alert alert-danger\">\n      {{ error }}\n    </div>\n    \n    <div v-if=\"success\" class=\"alert alert-success\">\n      {{ isEditing ? '商品更新成功' : '商品发布成功' }}\n    </div>\n    \n    <form @submit.prevent=\"saveProduct\" v-if=\"!loading\" class=\"card\">\n      <div class=\"form-group\">\n        <label for=\"name\">商品名称</label>\n        <input type=\"text\" id=\"name\" v-model=\"product.name\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"price\">商品价格</label>\n        <input type=\"number\" id=\"price\" v-model=\"product.price\" min=\"0\" step=\"0.01\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"imageUrl\">商品图片URL</label>\n        <input type=\"text\" id=\"imageUrl\" v-model=\"product.imageUrl\" \n               placeholder=\"输入图片URL，如：https://picsum.photos/600/400\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">商品描述</label>\n        <textarea id=\"description\" v-model=\"product.description\" rows=\"5\" required></textarea>\n      </div>\n      <div class=\"form-actions\">\n        <button type=\"submit\" class=\"btn\">{{ isEditing ? '更新商品' : '发布商品' }}</button>\n        <a href=\"/seller/dashboard\" class=\"btn btn-secondary\">取消</a>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ProductForm',\n  data() {\n    return {\n      product: {\n        name: '',\n        price: 0,\n        imageUrl: '',\n        description: ''\n      },\n      isEditing: false,\n      loading: true,\n      error: '',\n      success: false\n    }\n  },\n  created() {\n    const productId = this.$route.query.id\n    if (productId) {\n      this.isEditing = true\n      this.fetchProduct(productId)\n    } else {\n      this.loading = false\n    }\n  },\n  methods: {\n    async fetchProduct(id) {\n      try {\n        const response = await this.$axios.get(`/products/${id}`)\n        this.product = response.data\n        this.error = ''\n      } catch (err) {\n        this.error = '获取商品信息失败'\n        console.error(err)\n      } finally {\n        this.loading = false\n      }\n    },\n    async saveProduct() {\n      try {\n        if (this.isEditing) {\n          await this.$axios.put(`/products/${this.product.id}`, this.product)\n        } else {\n          await this.$axios.post('/products', this.product)\n        }\n        this.success = true\n        // 重置表单或跳转\n        setTimeout(() => {\n          this.$router.push('/seller/dashboard')\n        }, 1500)\n      } catch (err) {\n        this.error = this.isEditing ? '更新商品失败' : '发布商品失败'\n        console.error(err)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.form-actions {\n  margin-top: 1.5rem;\n  display: flex;\n  gap: 1rem;\n}\n\n.loading {\n  text-align: center;\n  padding: 2rem;\n  font-size: 1.2rem;\n}\n</style>\n","E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\ProductHistory.vue",["63"],"<template>\n  <div class=\"product-history\">\n    <h1>商品历史记录</h1>\n    \n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\n    \n    <div v-if=\"error\" class=\"alert alert-danger\">\n      {{ error }}\n    </div>\n    \n    <table v-if=\"!loading && products.length > 0\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>名称</th>\n          <th>价格</th>\n          <th>状态</th>\n          <th>创建时间</th>\n          <th>操作</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"product in products\" :key=\"product.id\">\n          <td>{{ product.id }}</td>\n          <td>{{ product.name }}</td>\n          <td>¥{{ product.price.toFixed(2) }}</td>\n          <td>\n            <span v-if=\"product.isActive\">在售</span>\n            <span v-else>已下架</span>\n            <span v-if=\"product.isFrozen\"> (已冻结)</span>\n          </td>\n          <td>{{ formatDate(product.createdAt) }}</td>\n          <td>\n            <a :href=\"'/seller/product/new?id=' + product.id\" class=\"btn\">编辑</a>\n            <button \n              class=\"btn btn-secondary\" \n              @click=\"toggleActive(product)\"\n              :disabled=\"product.isActive && products.filter(p => p.isActive).length <= 1\">\n              {{ product.isActive ? '下架' : '上架' }}\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    \n    <div v-if=\"!loading && products.length === 0\" class=\"alert alert-danger\">\n      暂无商品记录\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ProductHistory',\n  data() {\n    return {\n      products: [],\n      loading: true,\n      error: ''\n    }\n  },\n  created() {\n    this.fetchProducts()\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        this.loading = true\n        const response = await this.$axios.get('/products')\n        this.products = response.data\n        this.error = ''\n      } catch (err) {\n        this.error = '获取商品历史失败'\n        console.error(err)\n      } finally {\n        this.loading = false\n      }\n    },\n    async toggleActive(product) {\n      try {\n        await this.$axios.put(`/products/${product.id}/freeze`, null, {\n          params: { freeze: false }\n        })\n        \n        await this.$axios.put(`/products/${product.id}`, {\n          ...product,\n          isActive: !product.isActive\n        })\n        \n        // 如果是上架操作，需要将其他所有商品下架\n        if (!product.isActive) {\n          for (const p of this.products) {\n            if (p.id !== product.id && p.isActive) {\n              await this.$axios.put(`/products/${p.id}`, {\n                ...p,\n                isActive: false\n              })\n            }\n          }\n        }\n        \n        this.fetchProducts()\n      } catch (err) {\n        this.error = '操作失败，请重试'\n        console.error(err)\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return date.toLocaleString()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.loading {\n  text-align: center;\n  padding: 2rem;\n  font-size: 1.2rem;\n}\n</style>\n",{"ruleId":null,"fatal":true,"severity":2,"message":"64"},{"ruleId":null,"fatal":true,"severity":2,"message":"65"},{"ruleId":null,"fatal":true,"severity":2,"message":"66"},{"ruleId":null,"fatal":true,"severity":2,"message":"67"},{"ruleId":null,"fatal":true,"severity":2,"message":"68"},{"ruleId":null,"fatal":true,"severity":2,"message":"69"},{"ruleId":null,"fatal":true,"severity":2,"message":"70"},{"ruleId":null,"fatal":true,"severity":2,"message":"71"},{"ruleId":null,"fatal":true,"severity":2,"message":"72"},{"ruleId":null,"fatal":true,"severity":2,"message":"73"},"Parsing error: No Babel config file detected for E:\\购物网站\\simple-shop-frontend\\frontend\\src\\main.js. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for E:\\购物网站\\simple-shop-frontend\\frontend\\src\\App.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for E:\\购物网站\\simple-shop-frontend\\frontend\\src\\router\\index.js. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\SellerLogin.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\SellerDashboard.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\BuyerList.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\ChangePassword.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\HomeView.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\ProductForm.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for E:\\购物网站\\simple-shop-frontend\\frontend\\src\\views\\ProductHistory.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files."]